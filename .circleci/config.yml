# CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  win: circleci/windows@2.2.0  # Enables Windows executors

jobs:
  pre-checks:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install pre-check dependencies
          command: |
            pip install --progress-bar off --user -U -r requirements-precommit.txt

      - run:
          name: Run pre-checks
          command: |
            pre-commit run --all-files

  linux-python-38: &linux-template
    docker:
      - image: circleci/python:3.8

    environment:
      PYTHON: python

    working_directory: ~/repo

    steps:

      - checkout

      - restore_cache:
          keys:
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "requirements-precommit.txt" }}
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
            - python-env-v7-{{ arch }}
            - python-env-v7

      - run:
          name: Install dependencies
          command: |
            export PATH=$PATH:$HOME/.local/bin
            ${PYTHON} -m pip install --progress-bar off -U virtualenv --user
            mkdir -p ./venv

  linux-python-37:
    <<: *linux-template
    docker:
      - image: circleci/python:3.7

  linux-python-36:
    <<: *linux-template
    docker:
      - image: circleci/python:3.6

  linux-pypy-3:
    <<: *linux-template
    docker:
      - image: pypy:3
    environment:
      PYTHON: pypy3

  windows-python-38:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Install Python
          command: |
            choco install python --version 3.8.1 --limit-output --no-progress
      - run:
          name: Install dependencies
          command: |
            python --version
            python -m pip install --progress-bar off certifi
            python -m pip install --progress-bar off -U -e . -r requirements-dev.txt
      - run:
          name: Run tests
          command: |
            python -m pytest tests/ -v

  macos-python-38:
    macos:  # executor type
      xcode: 11.3.0
    steps:
      - checkout
      - run: 
          name: Install Python
          command: |
            brew install python --version 3.8.1
      - run:
          name: Install dependencies
          command: |
            python --version
            python -m pip install --progress-bar off certifi
            python -m pip install --progress-bar off -U -e . -r requirements-dev.txt
      - run:
          name: Run tests
          command: |
            python -m pytest tests/ -v


  check-metadata:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: check-zenodo-metadata
          command: |
            python -c "import json; json.load(open('.zenodo.json'))"
      - run:
          name: references.bib
          command: |
            pip install --progress-bar off --user -U pybtex
            python -c "import pybtex; print(pybtex.format_from_file(open('references.bib'), style='unsrt', output_backend='text'))"

  test-deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: test-deploy-pypi
          command: |
            bash .circleci/deploy.bash testpypi

  deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy-pypi
          command: |
            bash .circleci/deploy.bash pypi


workflows:
  version: 2
  test:
    jobs:
      - pre-checks
      - linux-python-38:
          requires:
            - pre-checks
      - linux-python-37:
          requires:
            - pre-checks
      - linux-python-36:
          requires:
            - pre-checks
      - linux-pypy-3:
          requires:
            - pre-checks
      - windows-python-38:
          requires:
            - pre-checks
      - macos-python-38:
          requires:
            - pre-checks
      - check-metadata:
          filters:
            branches:
              only: /release\/.*/
      - test-deploy-pypi:
          filters:
            branches:
              only: /release\/.*/
          requires:
            - linux-python-36
            - linux-python-37
            - linux-python-38
            - linux-pypy-3
            - windows-python-38
  deploy:
    jobs:
      - deploy-pypi:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
