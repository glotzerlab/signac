# CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  win: circleci/windows@2.2.0  # Enables Windows executors

jobs:
  style-check:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: style-check
          command: |
            pip install --progress-bar off --user -U flake8==3.7.1
            python -m flake8 --show-source signac/


  linux-python-38: &linux-template
    docker:
      - image: circleci/python:3.8

    environment:
      PYTHON: python

    working_directory: ~/repo

    steps:

      - checkout

      - restore_cache:
          keys:
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements-dev.txt" }}
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}
            - python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
            - python-env-v7-{{ arch }}
            - python-env-v7

      - run:
          name: install dependencies
          command: |
            export PATH=$PATH:$HOME/.local/bin
            ${PYTHON} -m pip install --progress-bar off -U virtualenv --user
            mkdir -p ./venv
            virtualenv ./venv --clear
            . venv/bin/activate
            if [[ "$CIRCLE_JOB" != *"pypy"* ]]; then
              sudo apt update -qq && sudo apt install -y -qq libhdf5-dev
            fi
            ${PYTHON} -m pip install --progress-bar off -U pip==18
            ${PYTHON} -m pip install --progress-bar off -U codecov
            ${PYTHON} -m pip install --progress-bar off -U -e . -r requirements-dev.txt

      - save_cache:
          key: python-env-v7-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "venv"

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            if [ $(python -c "import sys; print(sys.version_info.minor)") -lt 8 ]; then
              ${PYTHON} -m coverage run -m unittest discover tests/ -v
              ${PYTHON} -m pip install --progress-bar off python-rapidjson==0.9.1 && coverage run -m unittest discover tests/ -v
              ${PYTHON} -m coverage report -i
              codecov
            else
              ${PYTHON} -m unittest discover tests/ -v
              ${PYTHON} -m pip install --progress-bar off python-rapidjson==0.9.1 && ${PYTHON} -m unittest discover tests/ -v
            fi

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: benchmark
          command: |
            . venv/bin/activate
            ${PYTHON} -m pip install --progress-bar off -r requirements-benchmark.txt
            ${PYTHON} -m pip freeze
            ${PYTHON} benchmark.py run -N 100 1000  # this revision
            ${PYTHON} benchmark.py report
            git reset --hard origin/master
            git checkout "${CIRCLE_SHA1}" -- benchmark.py  # ensure that we use the same benchmark script
            ${PYTHON} benchmark.py run -N 100 1000 --force
            ${PYTHON} benchmark.py compare origin/master "${CIRCLE_SHA1}"

  linux-python-37:
    <<: *linux-template
    docker:
      - image: circleci/python:3.7

  linux-python-36:
    <<: *linux-template
    docker:
      - image: circleci/python:3.6

  linux-python-35:
    <<: *linux-template
    docker:
      - image: circleci/python:3.5

  linux-pypy-3:
    <<: *linux-template
    docker:
      - image: pypy:3
    environment:
      PYTHON: pypy3

  windows-python-38:
    executor: win/default
    steps:
      - checkout
      - run:
          name: install python
          command: |
            choco install python --version 3.8.1 --limit-output --no-progress
      - run:
          name: install dependencies
          command: |
            python --version
            python -m pip install --progress-bar off certifi
            python -m pip install --progress-bar off -U -e . -r requirements-dev.txt
      - run:
          name: run tests
          command: |
            python -m unittest discover tests/ -v

  check-metadata:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: check-zenodo-metadata
          command: |
            python -c "import json; json.load(open('.zenodo.json'))"
      - run:
          name: references.bib
          command: |
            pip install --progress-bar off --user -U pybtex
            python -c "import pybtex; print(pybtex.format_from_file(open('references.bib'), style='unsrt', output_backend='text'))"

  test-deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: test-deploy-pypi
          command: |
            pip install --progress-bar off --user -U -r .requirements-deploy.txt
            bash .test-deploy.bash

  deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: deploy-pypi
          command: |
            pip install --progress-bar off --user -U -r .requirements-deploy.txt
            bash .deploy.bash


workflows:
  version: 2
  test:
    jobs:
      - style-check
      - linux-python-38:
          requires:
            - style-check
      - linux-python-37:
          requires:
            - style-check
      - linux-python-36:
          requires:
            - style-check
      - linux-python-35:
          requires:
            - style-check
      - linux-pypy-3:
          requires:
            - linux-python-36
      - windows-python-38:
          requires:
            - style-check
      - check-metadata:
          filters:
            branches:
              only: /release\/.*/
      - test-deploy-pypi:
          filters:
            branches:
              only: /release\/.*/
          requires:
            - linux-python-35
            - linux-python-36
            - linux-python-37
            - linux-python-38
            - linux-pypy-3
            - windows-python-38
  deploy:
    jobs:
      - deploy-pypi:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
